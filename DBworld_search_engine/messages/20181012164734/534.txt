      SOFTWARE QUALITY JOURNAL SPECIAL ISSUE ON SOFTWARE QUALITY OF ADAPTIVE SOFTWARE SYSTEMS
                                               
                                  
            http://static.springer.com/sgw/documents/1632331/application/pdf/CfP_SQJ_SpecialIssue_AdaptiveSS.PDF
                         
                          

Guest Editors
-------------

* Bernhard Peischl, Graz University of Technology, Austria (bernhard.peischl@ist.tuGraz.at, http://www.ist.tugraz.at/peischl/)
* Benedikt Eberhardinger, University of Augsburg, Germany (benedikt.eberhardinger@informatik.uni-augsburg.de, https://www.informatik.uni-augsburg.de/lehrstuehle/swt/se/staff/eberhardinger/)


Scope & Topics
--------------

Adaptive systems are increasingly developed and operated in areas like advanced driver assistance systems, web-agents, chatbots
as well as smart factories and exhibit capabilities such as e.g., sensing, actuation, autonomy and control. With the 
emergence of data collection mechanisms, these systems allow one for continuous feedback on the actual behavior and to learn from
the interaction with the environment. The capability to have systems learn over time evolves from machine-learning or/and deductive 
approaches to artificial intelligence and enables the anticipation of desirable behavior and thus to intelligently react to 
environmental changes.

Although the above mentioned promising application fields for adaptive systems exist, there is no established methodology
for systematic validation and verification (V&V) of adaptive systems. Among the V&V strategies most commonly used in industry are 
simulation and testing. 

For validation in an early stage of the system lifecycle the adaptive software is deployed in a simulated hardware
alongside with the context environment (e.g., executable models of electrics/electronics, mechanics, user interaction). 
This aids in implementing a feedback-loop between the development team and the system to validate the adaptive behavior and helps 
to understand the boundaries of the system. Therefore, for instance, the following questions arise:

* How to integrate simulation into continuous software engineering?
* How to handle the various (co-)simulation environments in presence of staged deployment?
* How can feedback-loops aid in reducing uncertainties wrt. to adaptive behavior?
* How to discover the boundaries of adaptive behavior?
* How to stimulate to system to exhibit the adaptive behavior?


Subsequently test beds (e.g., model-, software-, and hardware-in-the-loop approaches) are used as these offer a more realistic 
environment for V&V. Software testing can be very effective both in revealing failures and assessing functional correctness, however, 
testing cannot provide evidence of the absence of faults. More rigorous and effective strategies to reason about correctness range 
from model checking to model-based software testing methods. These V&V methods are typically applied at design time. 
Therefore, the assessment of system properties occurring during system execution for reassuring these system properties 
after adaption requires not only traditional V&V methods to be applied at runtime but also the adoption of novel ones 
to be applied  in the various adaption phases. For example, the system may be adapted and reach a state that was unforeseen 
at design time, thus the system has not been verified for that state. Therefore, for example, the following questions arise:

* Which properties can be exclusively verified/tested at design time?
* Which properties can be verified/tested at time of system configuration?
* Which properties need to be verified/tested at runtime?
* Which properties can be verified/tested either at design time, configuration time, or run-time?


The special issue aims at bridging the gap between the various communities from areas such as software quality engineering, 
V&V , (model-based) testing and software engineering for adaptive and self-managing systems.

Areas of Interest 
------------------

The topics relevant to this special issue include, but are not restricted to, the following:

* Simulation and continuous experimentation
 + Simulation environments
 + Context dependent requirements
 + Feedback-loops to handle uncertainties
 + Explicit boundaries for adaptive behavior
 + Model evolution
 + Continuous experimentation and cyber-physical systems
 
* SELF-* and runtime monitoring
 + Run-time verification
 + V&V monitors
 + (Re)configuration
 + Adaption properties such as stability, robustness, consistency, security or safety
 + Context monitoring
 + Context-dependent properties
 
* Case studies and use cases
 + Fail-safe, fail-silent, fail-operational systems
 + Safety of intended functionality: ISO 26262, ISO/WD PAS 21448
 + Adaption mechanisms
 + Elastic computing
 + Machine-learning based adaptive mechanisms
 + Models at runtime
 + Case studies from domains such as web agents, advanced driver assistance systems, robotics, smart factories
 
* Testing methods for adaptive systems
 + Test case derivation & selection
 + Test execution
 + Test oracles
 + Model-based testing
 
We seek high quality original submissions that have not been previously published and that are actually not under consideration 
for publication elsewhere as well as extended versions of selected papers of the 2nd Int. Workshop on Verification and 
Validation of Adaptive Software Systems (VVASS 2018) accompanying the 18th IEEE International Conference on Software Quality, 
Reliability, and Security in Lisbon, Portugal. Authors of selected papers are invited to submit an extended version with at 
least 30 percent difference in technical content. Furthermore we solicit articles from the research community with an open 
call for papers. Every submission will be evaluated by at least three independent reviewers, using the same review process as for regular submissions.

The editor-in-chief, along with the guest editors, will make the final decision to accept or decline a submission.

Submission Information
----------------------

The Editor-in-Chief, along with the guest editors, will make the final decision to accept or decline a submission based on the reviews. Submissions must be written in English and submitted in the PDF format via the Editorial Managerâ€™s system at 
https://www.editorialmanager.com/sqjo/. When submitting in Editorial Manager, please choose article type SI: Adaptive Software Systems.

Preliminary Dates
-----------------

* Submission: October 31, 2018
* First notification: December 15, 2018
* Revision: January 15, 2019
* Final decision: February 15, 2019
* Final manuscript: March 15, 2019


Getting in Touch
----------------

Dipl.-Ing. Dr. Bernhard Peischl  | Institut fÃ¼r Softwaretechnologie, Technische UniversitÃ¤t Graz, 
Inffeldgasse 16b/II, A-8010 Graz, Ã–sterreich  |  
Tel: +43 316 873 5712  |  Mobil: +43 664 244 38 62  |  Fax: +43 316 873 5711
bernhard.peischl@ist.tuGraz.at
http://www.ist.tugraz.at/peischl/

 